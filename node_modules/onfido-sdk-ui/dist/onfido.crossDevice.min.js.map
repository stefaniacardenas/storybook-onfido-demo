{"version":3,"sources":["webpack://Onfido/./components/PhoneNumberInput/index.js"],"names":["FlagComponent","country","flagsPath","className","classNames","style","flagIcon","toLowerCase","PhoneNumberInput","countrySelect","document","getElementsByClassName","length","setAttribute","props","translate","number","clearErrors","actions","numberString","validateNumber","parsedNumber","parsePhoneNumberFromString","isValid","setMobileNumber","this","sms","initialNumber","injectForCountrySelectAriaLabel","smsNumberCountryCode","placeholderLabel","aria-labelledby","onSubmit","e","preventDefault","id","placeholder","value","onChange","inputClassName","mobileInput","phoneNumberContainer","flagComponent","aria-label","Component","localised"],"mappings":";uUAUMA,EAAgB,SAAC,GAAD,MAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACpB,oBACEC,UAAYC,IAAW,iCAAkCC,IAAMC,UAC/DD,MAAO,CACL,uCAA4BH,IAA5B,OAA0CD,EAAQM,cAAlD,aAKAC,E,wOAS8B,WAEhC,IAAMC,EAAgBC,SAASC,uBAAuB,4CAClDF,GAAiBA,EAAcG,OAAS,GAC1CH,EAAc,GAAGI,aAAa,aAAc,EAAKC,MAAMC,UAAU,mC,sBAI1D,SAACC,GAAW,MACY,EAAKF,MAA9BG,EADa,EACbA,YAAaC,EADA,EACAA,QACrBD,IACA,IAAME,EAAeH,GAAkB,GACvC,EAAKI,eAAeD,EAAcD,K,4BAGnB,SAACF,EAAQE,GACxB,IAAMG,EAAeC,YAA2BN,GAC1CO,IAAUF,GAAeA,EAAaE,UACxCF,EACFH,EAAQM,gBAAgBH,EAAaL,OAAQO,GAE7CL,EAAQM,gBAAgB,GAAID,K,mEA5BZ,MACOE,KAAKX,MAAtBY,EADU,EACVA,IAAKR,EADK,EACLA,QACPS,EAAgBD,EAAIV,OAASU,EAAIV,OAAS,GAChDS,KAAKL,eAAeO,EAAeT,GACnCO,KAAKG,oC,+BA4BE,MAC8CH,KAAKX,MAAlDC,EADD,EACCA,UAAWc,EADZ,EACYA,qBADZ,IACkCH,WADlC,MACwC,GADxC,EAEDI,EAAmBf,EAAU,yCACnC,OACE,oBAAMgB,kBAAgB,mBAAmBC,SAAU,SAACC,GAAD,OAAOA,EAAEC,mBAC1D,YAAC,IAAD,CACEC,GAAG,mBACHC,YAAaN,EACbO,MAAOX,EAAIV,QAAU,GACrBsB,SAAUb,KAAKa,SACfrC,QAAS4B,EACTU,eAAc,UAAKlC,IAAMmC,aACzBrC,UAAS,UAAKE,IAAMoC,sBACpBC,cAAgB1C,EAChB2C,aAAYb,S,GAhDSc,aAuDhBC,sBAAUrC","file":"onfido.crossDevice.min.js","sourcesContent":["import { h, Component} from 'preact'\nimport PhoneInput from 'react-phone-number-input/native'\nimport {parsePhoneNumberFromString} from 'libphonenumber-js'\n\nimport 'react-phone-number-input/style.css'\nimport style from './style.css'\n\nimport classNames from 'classnames';\nimport {localised} from '../../locales'\n\nconst FlagComponent = ({ country, flagsPath }) => (\n  <span\n    className={ classNames('react-phone-number-input__icon', style.flagIcon) }\n    style={{\n      'background-image': `url(${ flagsPath }${ country.toLowerCase() }.svg)`\n    }}\n  />\n);\n\nclass PhoneNumberInput extends Component {\n\n  componentDidMount() {\n    const { sms, actions } = this.props\n    const initialNumber = sms.number ? sms.number : \"\"\n    this.validateNumber(initialNumber, actions)\n    this.injectForCountrySelectAriaLabel()\n  }\n\n  injectForCountrySelectAriaLabel = () => {\n    // HACK: This is necessary as react-phone-number-input library is not actually setting country select aria-label\n    const countrySelect = document.getElementsByClassName('react-phone-number-input__country-select')\n    if (countrySelect && countrySelect.length > 0) {\n      countrySelect[0].setAttribute('aria-label', this.props.translate('accessibility.country_select'))\n    }\n  }\n\n  onChange = (number) => {\n    const { clearErrors, actions } = this.props\n    clearErrors()\n    const numberString = number ? number : \"\"\n    this.validateNumber(numberString, actions)\n  }\n\n  validateNumber = (number, actions) => {\n    const parsedNumber = parsePhoneNumberFromString(number)\n    const isValid = parsedNumber ? parsedNumber.isValid() : false\n    if (parsedNumber) {\n      actions.setMobileNumber(parsedNumber.number, isValid)\n    } else {\n      actions.setMobileNumber('', isValid)\n    }\n  }\n\n  render() {\n    const { translate, smsNumberCountryCode, sms = {}} = this.props\n    const placeholderLabel = translate('cross_device.phone_number_placeholder')\n    return (\n      <form aria-labelledby='phoneNumberInput' onSubmit={(e) => e.preventDefault()}>\n        <PhoneInput\n          id='phoneNumberInput'\n          placeholder={placeholderLabel}\n          value={sms.number || ''}\n          onChange={this.onChange}\n          country={smsNumberCountryCode}\n          inputClassName={`${style.mobileInput}`}\n          className={`${style.phoneNumberContainer}`}\n          flagComponent={ FlagComponent }\n          aria-label={placeholderLabel}\n        />\n      </form>\n    )\n  }\n}\n\nexport default localised(PhoneNumberInput)\n"],"sourceRoot":""}